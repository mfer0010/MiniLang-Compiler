#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/marc/Uni 3rd Year/Compilers/src/ASTBinaryExprNode.cpp
include/ASTNodes/ASTBinaryExprNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTBinaryExprNode.h

/home/marc/Uni 3rd Year/Compilers/src/ASTNode.cpp
include/ASTNodes/ASTNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNode.h

/home/marc/Uni 3rd Year/Compilers/src/ASTNumberExprNode.cpp
include/ASTNodes/ASTNumberExprNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNumberExprNode.h

/home/marc/Uni 3rd Year/Compilers/src/Lexer.cpp
include/Lexer.h
/home/marc/Uni 3rd Year/Compilers/src/include/Lexer.h
include/LexerException.h
/home/marc/Uni 3rd Year/Compilers/src/include/LexerException.h

/home/marc/Uni 3rd Year/Compilers/src/LexerException.cpp
include/LexerException.h
/home/marc/Uni 3rd Year/Compilers/src/include/LexerException.h

/home/marc/Uni 3rd Year/Compilers/src/Parser.cpp
include/Parser.h
/home/marc/Uni 3rd Year/Compilers/src/include/Parser.h

/home/marc/Uni 3rd Year/Compilers/src/ParserException.cpp
include/LexerException.h
/home/marc/Uni 3rd Year/Compilers/src/include/LexerException.h

/home/marc/Uni 3rd Year/Compilers/src/Token.cpp
include/Token.h
/home/marc/Uni 3rd Year/Compilers/src/include/Token.h

/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTBinaryExprNode.h
ASTExpression_Node.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTExpression_Node.h
string
-

/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTExpression_Node.h
ASTNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNode.h

/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNode.h
vector
-
algorithm
-

/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNumberExprNode.h
string
-
ASTExpression_Node.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTExpression_Node.h

/home/marc/Uni 3rd Year/Compilers/src/include/Lexer.h
string
-
fstream
-
iostream
-
stack
-
Token.h
/home/marc/Uni 3rd Year/Compilers/src/include/Token.h

/home/marc/Uni 3rd Year/Compilers/src/include/LexerException.h
MiniLangExceptions.h
/home/marc/Uni 3rd Year/Compilers/src/include/MiniLangExceptions.h

/home/marc/Uni 3rd Year/Compilers/src/include/MiniLangExceptions.h
string
-

/home/marc/Uni 3rd Year/Compilers/src/include/Parser.h
Lexer.h
/home/marc/Uni 3rd Year/Compilers/src/include/Lexer.h
ASTNodes/ASTExpression_Node.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTExpression_Node.h
ASTNodes/ASTNumberExprNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTNumberExprNode.h
ASTNodes/ASTBinaryExprNode.h
/home/marc/Uni 3rd Year/Compilers/src/include/ASTNodes/ASTBinaryExprNode.h

/home/marc/Uni 3rd Year/Compilers/src/include/Token.h
iostream
-

/home/marc/Uni 3rd Year/Compilers/src/main.cpp
iostream
-
include/Lexer.h
/home/marc/Uni 3rd Year/Compilers/src/include/Lexer.h
include/Parser.h
/home/marc/Uni 3rd Year/Compilers/src/include/Parser.h
include/LexerException.h
/home/marc/Uni 3rd Year/Compilers/src/include/LexerException.h

